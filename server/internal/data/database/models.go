// Code generated by sqlc. DO NOT EDIT.

package database

import (
	"fmt"
	"time"

	"github.com/google/uuid"
)

type MobilePlatform string

const (
	MobilePlatformAndroid MobilePlatform = "Android"
	MobilePlatformIOS     MobilePlatform = "iOS"
)

func (e *MobilePlatform) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = MobilePlatform(s)
	case string:
		*e = MobilePlatform(s)
	default:
		return fmt.Errorf("unsupported scan type for MobilePlatform: %T", src)
	}
	return nil
}

type PasswordForgot struct {
	UserID     int32     `json:"userID"`
	ResetToken uuid.UUID `json:"resetToken"`
	ValidUntil time.Time `json:"validUntil"`
	IsUsed     bool      `json:"isUsed"`
}

type User struct {
	ID           int32     `json:"id"`
	UserUuid     uuid.UUID `json:"userUuid"`
	PasswordHash string    `json:"passwordHash"`
	PasswordUuid uuid.UUID `json:"passwordUuid"`
	Email        string    `json:"email"`
	FirstName    string    `json:"firstName"`
	CreatedAt    time.Time `json:"createdAt"`
}

type UserPushToken struct {
	Userid   int32          `json:"userid"`
	Platform MobilePlatform `json:"platform"`
	Token    string         `json:"token"`
}
