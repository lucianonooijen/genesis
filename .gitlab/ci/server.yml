##########################
# BASE CONFIG
##########################
.server_base: &server_base
  image: golang:latest
  before_script:
    - cd server
    - make bootstrap
    - golangci-lint --version # Check if is installed
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - server/**/*
    - if: $CI_COMMIT_TAG
      when: never

##########################
# LINTING AND TEST STAGE
##########################
test_lint_server:
  <<: *server_base
  stage: test_lint
  script:
    - golangci-lint run --sort-results
    - go vet ./...
    - golint ./...
    - goimports -e -d -local git.bytecode.nl/bytecode/genesis .
    - echo "Running tests with coverage"
    - go test -coverprofile=coverage.txt -covermode count -v 2>&1 ./... | go-junit-report -set-exit-code > junit.xml
    - gocover-cobertura < coverage.txt > cobertura.xml
  artifacts:
    reports:
      junit: server/junit.xml
      cobertura: server/coverage/cobertura-coverage.xml
  needs: []

##########################
# BUILDING STAGE
##########################
build_server:
  <<: *server_base
  stage: build
  script:
    - make build
  needs: []
